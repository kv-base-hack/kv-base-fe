// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SwapImport } from './routes/swap'
import { Route as MyPortfolioImport } from './routes/my-portfolio'
import { Route as MarketImport } from './routes/market'
import { Route as KaichatAiAssistantImport } from './routes/kaichat-ai-assistant'
import { Route as FindGemsImport } from './routes/find-gems'
import { Route as EducationImport } from './routes/education'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as IndexImport } from './routes/index'
import { Route as TradingSignalDashboardImport } from './routes/trading-signal/dashboard'
import { Route as TradingSignalAiSignalImport } from './routes/trading-signal/ai-signal'
import { Route as SmartmoneyOnchainWalletExplorerImport } from './routes/smartmoney-onchain/wallet-explorer'
import { Route as SmartmoneyOnchainTokenExplorerImport } from './routes/smartmoney-onchain/token-explorer'
import { Route as SmartmoneyOnchainOnchainSignalsImport } from './routes/smartmoney-onchain/onchain-signals'
import { Route as SmartmoneyOnchainLeaderboardImport } from './routes/smartmoney-onchain/leaderboard'
import { Route as AcademyCoursesImport } from './routes/academy/courses'
import { Route as AcademyArticlesImport } from './routes/academy/articles'
import { Route as SmartmoneyOnchainWalletExplorerGroupIdDeepImport } from './routes/smartmoney-onchain/wallet-explorer_.$groupId.deep'
import { Route as SmartmoneyOnchainTokenExplorerTokenDeepImport } from './routes/smartmoney-onchain/token-explorer_.$token.deep'
import { Route as AcademyCoursesCourseIdDeepImport } from './routes/academy/courses_.$courseId.deep'
import { Route as AcademyArticlesArticleIdDeepImport } from './routes/academy/articles_.$articleId.deep'

// Create Virtual Routes

const TradingTerminalLazyImport = createFileRoute('/trading-terminal')()

// Create/Update Routes

const TradingTerminalLazyRoute = TradingTerminalLazyImport.update({
  path: '/trading-terminal',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/trading-terminal.lazy').then((d) => d.Route),
)

const SwapRoute = SwapImport.update({
  path: '/swap',
  getParentRoute: () => rootRoute,
} as any)

const MyPortfolioRoute = MyPortfolioImport.update({
  path: '/my-portfolio',
  getParentRoute: () => rootRoute,
} as any)

const MarketRoute = MarketImport.update({
  path: '/market',
  getParentRoute: () => rootRoute,
} as any)

const KaichatAiAssistantRoute = KaichatAiAssistantImport.update({
  path: '/kaichat-ai-assistant',
  getParentRoute: () => rootRoute,
} as any)

const FindGemsRoute = FindGemsImport.update({
  path: '/find-gems',
  getParentRoute: () => rootRoute,
} as any)

const EducationRoute = EducationImport.update({
  path: '/education',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TradingSignalDashboardRoute = TradingSignalDashboardImport.update({
  path: '/trading-signal/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const TradingSignalAiSignalRoute = TradingSignalAiSignalImport.update({
  path: '/trading-signal/ai-signal',
  getParentRoute: () => rootRoute,
} as any)

const SmartmoneyOnchainWalletExplorerRoute =
  SmartmoneyOnchainWalletExplorerImport.update({
    path: '/smartmoney-onchain/wallet-explorer',
    getParentRoute: () => rootRoute,
  } as any)

const SmartmoneyOnchainTokenExplorerRoute =
  SmartmoneyOnchainTokenExplorerImport.update({
    path: '/smartmoney-onchain/token-explorer',
    getParentRoute: () => rootRoute,
  } as any)

const SmartmoneyOnchainOnchainSignalsRoute =
  SmartmoneyOnchainOnchainSignalsImport.update({
    path: '/smartmoney-onchain/onchain-signals',
    getParentRoute: () => rootRoute,
  } as any)

const SmartmoneyOnchainLeaderboardRoute =
  SmartmoneyOnchainLeaderboardImport.update({
    path: '/smartmoney-onchain/leaderboard',
    getParentRoute: () => rootRoute,
  } as any)

const AcademyCoursesRoute = AcademyCoursesImport.update({
  path: '/academy/courses',
  getParentRoute: () => rootRoute,
} as any)

const AcademyArticlesRoute = AcademyArticlesImport.update({
  path: '/academy/articles',
  getParentRoute: () => rootRoute,
} as any)

const SmartmoneyOnchainWalletExplorerGroupIdDeepRoute =
  SmartmoneyOnchainWalletExplorerGroupIdDeepImport.update({
    path: '/smartmoney-onchain/wallet-explorer/$groupId/deep',
    getParentRoute: () => rootRoute,
  } as any)

const SmartmoneyOnchainTokenExplorerTokenDeepRoute =
  SmartmoneyOnchainTokenExplorerTokenDeepImport.update({
    path: '/smartmoney-onchain/token-explorer/$token/deep',
    getParentRoute: () => rootRoute,
  } as any)

const AcademyCoursesCourseIdDeepRoute = AcademyCoursesCourseIdDeepImport.update(
  {
    path: '/academy/courses/$courseId/deep',
    getParentRoute: () => rootRoute,
  } as any,
)

const AcademyArticlesArticleIdDeepRoute =
  AcademyArticlesArticleIdDeepImport.update({
    path: '/academy/articles/$articleId/deep',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/education': {
      preLoaderRoute: typeof EducationImport
      parentRoute: typeof rootRoute
    }
    '/find-gems': {
      preLoaderRoute: typeof FindGemsImport
      parentRoute: typeof rootRoute
    }
    '/kaichat-ai-assistant': {
      preLoaderRoute: typeof KaichatAiAssistantImport
      parentRoute: typeof rootRoute
    }
    '/market': {
      preLoaderRoute: typeof MarketImport
      parentRoute: typeof rootRoute
    }
    '/my-portfolio': {
      preLoaderRoute: typeof MyPortfolioImport
      parentRoute: typeof rootRoute
    }
    '/swap': {
      preLoaderRoute: typeof SwapImport
      parentRoute: typeof rootRoute
    }
    '/trading-terminal': {
      preLoaderRoute: typeof TradingTerminalLazyImport
      parentRoute: typeof rootRoute
    }
    '/academy/articles': {
      preLoaderRoute: typeof AcademyArticlesImport
      parentRoute: typeof rootRoute
    }
    '/academy/courses': {
      preLoaderRoute: typeof AcademyCoursesImport
      parentRoute: typeof rootRoute
    }
    '/smartmoney-onchain/leaderboard': {
      preLoaderRoute: typeof SmartmoneyOnchainLeaderboardImport
      parentRoute: typeof rootRoute
    }
    '/smartmoney-onchain/onchain-signals': {
      preLoaderRoute: typeof SmartmoneyOnchainOnchainSignalsImport
      parentRoute: typeof rootRoute
    }
    '/smartmoney-onchain/token-explorer': {
      preLoaderRoute: typeof SmartmoneyOnchainTokenExplorerImport
      parentRoute: typeof rootRoute
    }
    '/smartmoney-onchain/wallet-explorer': {
      preLoaderRoute: typeof SmartmoneyOnchainWalletExplorerImport
      parentRoute: typeof rootRoute
    }
    '/trading-signal/ai-signal': {
      preLoaderRoute: typeof TradingSignalAiSignalImport
      parentRoute: typeof rootRoute
    }
    '/trading-signal/dashboard': {
      preLoaderRoute: typeof TradingSignalDashboardImport
      parentRoute: typeof rootRoute
    }
    '/academy/articles/$articleId/deep': {
      preLoaderRoute: typeof AcademyArticlesArticleIdDeepImport
      parentRoute: typeof rootRoute
    }
    '/academy/courses/$courseId/deep': {
      preLoaderRoute: typeof AcademyCoursesCourseIdDeepImport
      parentRoute: typeof rootRoute
    }
    '/smartmoney-onchain/token-explorer/$token/deep': {
      preLoaderRoute: typeof SmartmoneyOnchainTokenExplorerTokenDeepImport
      parentRoute: typeof rootRoute
    }
    '/smartmoney-onchain/wallet-explorer/$groupId/deep': {
      preLoaderRoute: typeof SmartmoneyOnchainWalletExplorerGroupIdDeepImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  DashboardRoute,
  EducationRoute,
  FindGemsRoute,
  KaichatAiAssistantRoute,
  MarketRoute,
  MyPortfolioRoute,
  SwapRoute,
  TradingTerminalLazyRoute,
  AcademyArticlesRoute,
  AcademyCoursesRoute,
  SmartmoneyOnchainLeaderboardRoute,
  SmartmoneyOnchainOnchainSignalsRoute,
  SmartmoneyOnchainTokenExplorerRoute,
  SmartmoneyOnchainWalletExplorerRoute,
  TradingSignalAiSignalRoute,
  TradingSignalDashboardRoute,
  AcademyArticlesArticleIdDeepRoute,
  AcademyCoursesCourseIdDeepRoute,
  SmartmoneyOnchainTokenExplorerTokenDeepRoute,
  SmartmoneyOnchainWalletExplorerGroupIdDeepRoute,
])
