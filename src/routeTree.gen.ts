// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as IndexImport } from './routes/index'
import { Route as OnchainDiscoveryWalletExplorerImport } from './routes/onchain-discovery/wallet-explorer'
import { Route as OnchainDiscoveryTokenExplorerImport } from './routes/onchain-discovery/token-explorer'
import { Route as OnchainDiscoveryOnchainSignalsImport } from './routes/onchain-discovery/onchain-signals'
import { Route as OnchainDiscoveryLeaderboardImport } from './routes/onchain-discovery/leaderboard'
import { Route as OnchainDiscoveryWalletExplorerGroupIdDeepImport } from './routes/onchain-discovery/wallet-explorer_.$groupId.deep'
import { Route as OnchainDiscoveryTokenExplorerTokenDeepImport } from './routes/onchain-discovery/token-explorer_.$token.deep'

// Create Virtual Routes

const TradingTerminalLazyImport = createFileRoute('/trading-terminal')()
const SwapLazyImport = createFileRoute('/swap')()
const SubcriptionsLazyImport = createFileRoute('/subcriptions')()
const MyPortfolioLazyImport = createFileRoute('/my-portfolio')()
const MarketLazyImport = createFileRoute('/market')()
const EducationLazyImport = createFileRoute('/education')()
const BotsStrategyLazyImport = createFileRoute('/bots-strategy')()

// Create/Update Routes

const TradingTerminalLazyRoute = TradingTerminalLazyImport.update({
  path: '/trading-terminal',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/trading-terminal.lazy').then((d) => d.Route),
)

const SwapLazyRoute = SwapLazyImport.update({
  path: '/swap',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/swap.lazy').then((d) => d.Route))

const SubcriptionsLazyRoute = SubcriptionsLazyImport.update({
  path: '/subcriptions',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/subcriptions.lazy').then((d) => d.Route))

const MyPortfolioLazyRoute = MyPortfolioLazyImport.update({
  path: '/my-portfolio',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/my-portfolio.lazy').then((d) => d.Route))

const MarketLazyRoute = MarketLazyImport.update({
  path: '/market',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/market.lazy').then((d) => d.Route))

const EducationLazyRoute = EducationLazyImport.update({
  path: '/education',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/education.lazy').then((d) => d.Route))

const BotsStrategyLazyRoute = BotsStrategyLazyImport.update({
  path: '/bots-strategy',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/bots-strategy.lazy').then((d) => d.Route))

const DashboardRoute = DashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const OnchainDiscoveryWalletExplorerRoute =
  OnchainDiscoveryWalletExplorerImport.update({
    path: '/onchain-discovery/wallet-explorer',
    getParentRoute: () => rootRoute,
  } as any)

const OnchainDiscoveryTokenExplorerRoute =
  OnchainDiscoveryTokenExplorerImport.update({
    path: '/onchain-discovery/token-explorer',
    getParentRoute: () => rootRoute,
  } as any)

const OnchainDiscoveryOnchainSignalsRoute =
  OnchainDiscoveryOnchainSignalsImport.update({
    path: '/onchain-discovery/onchain-signals',
    getParentRoute: () => rootRoute,
  } as any)

const OnchainDiscoveryLeaderboardRoute =
  OnchainDiscoveryLeaderboardImport.update({
    path: '/onchain-discovery/leaderboard',
    getParentRoute: () => rootRoute,
  } as any)

const OnchainDiscoveryWalletExplorerGroupIdDeepRoute =
  OnchainDiscoveryWalletExplorerGroupIdDeepImport.update({
    path: '/onchain-discovery/wallet-explorer/$groupId/deep',
    getParentRoute: () => rootRoute,
  } as any)

const OnchainDiscoveryTokenExplorerTokenDeepRoute =
  OnchainDiscoveryTokenExplorerTokenDeepImport.update({
    path: '/onchain-discovery/token-explorer/$token/deep',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/bots-strategy': {
      preLoaderRoute: typeof BotsStrategyLazyImport
      parentRoute: typeof rootRoute
    }
    '/education': {
      preLoaderRoute: typeof EducationLazyImport
      parentRoute: typeof rootRoute
    }
    '/market': {
      preLoaderRoute: typeof MarketLazyImport
      parentRoute: typeof rootRoute
    }
    '/my-portfolio': {
      preLoaderRoute: typeof MyPortfolioLazyImport
      parentRoute: typeof rootRoute
    }
    '/subcriptions': {
      preLoaderRoute: typeof SubcriptionsLazyImport
      parentRoute: typeof rootRoute
    }
    '/swap': {
      preLoaderRoute: typeof SwapLazyImport
      parentRoute: typeof rootRoute
    }
    '/trading-terminal': {
      preLoaderRoute: typeof TradingTerminalLazyImport
      parentRoute: typeof rootRoute
    }
    '/onchain-discovery/leaderboard': {
      preLoaderRoute: typeof OnchainDiscoveryLeaderboardImport
      parentRoute: typeof rootRoute
    }
    '/onchain-discovery/onchain-signals': {
      preLoaderRoute: typeof OnchainDiscoveryOnchainSignalsImport
      parentRoute: typeof rootRoute
    }
    '/onchain-discovery/token-explorer': {
      preLoaderRoute: typeof OnchainDiscoveryTokenExplorerImport
      parentRoute: typeof rootRoute
    }
    '/onchain-discovery/wallet-explorer': {
      preLoaderRoute: typeof OnchainDiscoveryWalletExplorerImport
      parentRoute: typeof rootRoute
    }
    '/onchain-discovery/token-explorer/$token/deep': {
      preLoaderRoute: typeof OnchainDiscoveryTokenExplorerTokenDeepImport
      parentRoute: typeof rootRoute
    }
    '/onchain-discovery/wallet-explorer/$groupId/deep': {
      preLoaderRoute: typeof OnchainDiscoveryWalletExplorerGroupIdDeepImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  DashboardRoute,
  BotsStrategyLazyRoute,
  EducationLazyRoute,
  MarketLazyRoute,
  MyPortfolioLazyRoute,
  SubcriptionsLazyRoute,
  SwapLazyRoute,
  TradingTerminalLazyRoute,
  OnchainDiscoveryLeaderboardRoute,
  OnchainDiscoveryOnchainSignalsRoute,
  OnchainDiscoveryTokenExplorerRoute,
  OnchainDiscoveryWalletExplorerRoute,
  OnchainDiscoveryTokenExplorerTokenDeepRoute,
  OnchainDiscoveryWalletExplorerGroupIdDeepRoute,
])
